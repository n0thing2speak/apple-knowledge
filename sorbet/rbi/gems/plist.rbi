# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/plist/all/plist.rbi
#
# plist-3.6.0

module Plist
  def self.parse_xml(filename_or_xml); end
end
module Plist::Emit
  def save_plist(filename, options = nil); end
  def self.dump(obj, envelope = nil, options = nil); end
  def self.save_plist(obj, filename, options = nil); end
  def self.wrap(contents); end
  def to_plist(envelope = nil, options = nil); end
end
class Plist::Emit::PlistBuilder
  def build(element, level = nil); end
  def comment_tag(content); end
  def data_tag(data, level); end
  def element_type(item); end
  def indent(str, level); end
  def initialize(indent_str); end
  def tag(type, contents, level, &block); end
end
class Array
  include Plist::Emit
end
class Hash
  include Plist::Emit
end
class Plist::UnimplementedElementError < RuntimeError
end
class Plist::Listener
  def initialize; end
  def open; end
  def open=(arg0); end
  def result; end
  def result=(arg0); end
  def tag_end(name); end
  def tag_start(name, attributes); end
  def text(contents); end
end
class Plist::StreamParser
  def initialize(plist_data_or_file, listener); end
  def parse; end
  def parse_encoding_from_xml_declaration(xml_declaration); end
end
class Plist::PTag
  def children; end
  def children=(arg0); end
  def initialize; end
  def self.inherited(sub_class); end
  def self.mappings; end
  def text; end
  def text=(arg0); end
  def to_ruby; end
end
class Plist::PList < Plist::PTag
  def to_ruby; end
end
class Plist::PDict < Plist::PTag
  def to_ruby; end
end
class Plist::PKey < Plist::PTag
  def to_ruby; end
end
class Plist::PString < Plist::PTag
  def to_ruby; end
end
class Plist::PArray < Plist::PTag
  def to_ruby; end
end
class Plist::PInteger < Plist::PTag
  def to_ruby; end
end
class Plist::PTrue < Plist::PTag
  def to_ruby; end
end
class Plist::PFalse < Plist::PTag
  def to_ruby; end
end
class Plist::PReal < Plist::PTag
  def to_ruby; end
end
class Plist::PDate < Plist::PTag
  def to_ruby; end
end
class Plist::PData < Plist::PTag
  def to_ruby; end
end
